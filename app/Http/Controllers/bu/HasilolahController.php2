<?php

namespace App\Http\Controllers\bu;

use App\Http\Controllers\Controller;
use RealRashid\SweetAlert\Facades\Alert;
use App\Models\Pasokan_hasil_olah_bbm;
use Maatwebsite\Excel\Facades\Excel;
use Illuminate\Support\Facades\Auth;
use App\Models\Jual_hasil_olah_bbm;
use Illuminate\Support\Facades\DB;
use App\Imports\Importjualhasil;
use Illuminate\Http\Request;
use App\Models\Harga_bbm_jbu;
use App\Models\Produk;
use App\Models\Izin;
use App\Model\province;

class HasilolahController extends Controller
{

    public function index()
    {
        $izin = Izin::join('badan_usahas', 'izins.badan_usaha_id', "=", 'badan_usahas.id')
            ->select(
                'badan_usahas.id',
                'badan_usahas.nama_badan_usaha',
                'badan_usahas.npwp',
                'izins.key',
                'izins.tgl_ajuan_izin',
                'jenis_izin'
            )
            ->where('badan_usahas.id', Auth::user()->badan_usaha_id)
            ->get();

        return view('badan_usaha.niaga.hasil_olahan.index', compact('izin'));
    }

    public function simpan_Penjualan_Ho()
    {
        // Implementasi fungsi simpan_Penjualan_Ho()
    }

    public function show_jholbx()
    {
        $show_jholbx = DB::select("SELECT * FROM jual_hasil_olah_bbms");
        $pasokan = Pasokan_hasil_olah_bbm::get();
        $hargabbmjbu = Harga_bbm_jbu::get();
        $produk = Produk::get();

        return view('badan_usaha.niaga.hasil_olahan.show', compact(
            'show_jholbx',
            'pasokan',
            'hargabbmjbu',
            'produk'
        ));
    }

    public function simpan_jholbx(Request $request)
    {
        $pesan = [
            'badan_usaha_id.required' => 'badan_usaha_id masih kosong',
            'izin_id.required' => 'izin_id masih kosong',
            'bulan.required' => 'bulan masih kosong',
            'produk.required' => 'produk masih kosong',
            'provinsi.required' => 'provinsi masih kosong',
            'kabupaten_kota.required' => 'kabupaten_kota masih kosong',
            'sektor.required' => 'sektor masih kosong',
            'volume.required' => 'volume masih kosong',
            'satuan.required' => 'satuan masih kosong',
            'status.required' => 'status masih kosong',
            'catatan.required' => 'catatan masih kosong',
            'petugas.required' => 'petugas masih kosong',
        ];

        $validatedData = $request->validate([
            'badan_usaha_id' => 'required',
            'izin_id' => 'required',
            'bulan' => 'required',
            'produk' => 'required',
            'provinsi' => 'required',
            'kabupaten_kota' => 'required',
            'sektor' => 'required',
            'volume' => 'required',
            'satuan' => 'required',
            'status' => 'required',
            'catatan' => 'required',
            'petugas' => 'required',
        ], $pesan);

        Jual_hasil_olah_bbm::create($validatedData);

        if ($validatedData) {
            //redirect dengan pesan sukses
            Alert::success('success', 'Data berhasil ditambahkan');
            return back();
        } else {
            //redirect dengan pesan error
            Alert::error('error', 'Data gagal berhasil ditambahkan');
            return back();
        }
    }

    public function hapus_jholbx(Request $request, $id)
    {
        Jual_hasil_olah_bbm::destroy($id);
        if ($id) {
            //redirect dengan pesan sukses
            Alert::success('success', 'Data berhasil dihapus');
            return back();
        } else {
            //redirect dengan pesan error
            Alert::error('error', 'Data gagal dihapus');
            return back();
        }
    }

    public function edit($id)
    {
        $show_jholbx = Jual_hasil_olah_bbm::find($id);
        return response()->json([
            'data' => $show_jholbx
        ]);
    }

    public function importjholbx()
    {
        $import = Excel::import(new Importjualhasil, request()->file('file'));

        if ($import) {
            //redirect dengan pesan sukses
            Alert::success('success', 'Data excel berhasil diupload');
            return back();
        } else {
            //redirect dengan pesan error
            Alert::error('error', 'Data excel gagal diupload');
            return back();
        }
    }

    public function get_penjualan_ho($id)
    {
        $data['produk'] = DB::select("SELECT produks.name FROM produks GROUP BY produks.name");
        $data['provinsi'] = DB::select("SELECT provinces.id, provinces.name FROM provinces GROUP BY provinces.name");
        $data['find'] = Jual_hasil_olah_bbm::find($id);
        return response()->json(['data' => $data]);
        // $data = Jual_hasil_olah_bbm::find($id);
        // return response()->json(['data' => $data]);
    }

    public function update_jholbx(Request $request, $id)
    {
        $Jual_hasil_olah_bbm = $id;
        $pesan = [
            'id.required' => 'id masih kosong',
            'badan_usaha_id.required' => 'badan_usaha_id masih kosong',
            'izin_id.required' => 'izin_id masih kosong',
            'bulan.required' => 'bulan masih kosong',
            'produk.required' => 'produk masih kosong',
            'provinsi.required' => 'provinsi masih kosong',
            'kabupaten_kota.required' => 'kabupaten_kota masih kosong',
            'sektor.required' => 'sektor masih kosong',
            'volume.required' => 'volume masih kosong',
            'satuan.required' => 'satuan masih kosong',
            'status.required' => 'status masih kosong',
            'catatan.required' => 'catatan masih kosong',
            'petugas.required' => 'petugas masih kosong',
        ];

        $rules = [
            'id' => 'required',
            'badan_usaha_id' => 'required',
            'izin_id' => 'required',
            'bulan' => 'required',
            'produk' => 'required',
            'provinsi' => 'required',
            'kabupaten_kota' => 'required',
            'sektor' => 'required',
            'volume' => 'required',
            'satuan' => 'required',
            'status' => 'required',
            'catatan' => 'required',
            'petugas' => 'required',

        ];

        $validatedData = $request->validate($rules, $pesan);

        Jual_hasil_olah_bbm::where('id', $Jual_hasil_olah_bbm)
            ->update($validatedData);

        if ($validatedData) {
            //redirect dengan pesan sukses
            Alert::success('success', 'Data berhasil diupdate');
            return back();
        } else {
            //redirect dengan pesan error
            Alert::error('error', 'Data gagal diupdate');
            return back();
        }
    }
    public function get_produk()
    {
   
        $data = DB::select("SELECT produks.name FROM produks GROUP BY produks.name");
        // $data = Produk::get();
        return response()->json(['data' => $data]);
    }
    public function get_satuan($name)
    {
        $data = DB::select("SELECT produks.satuan FROM produks WHERE produks.name = '$name'");
        // $data = Produk::get();
        return response()->json(['data' => $data]);
    }
    public function get_provinsi()
    {
        $data = DB::select("SELECT provinces.id, provinces.name FROM provinces");
        // $data = province::get();
        return response()->json(['data' => $data]);
    }
    public function get_kota($id_prov)
    {
        $data = DB::select("SELECT kotas.nama_kota FROM kotas WHERE kotas.id_prov = '$id_prov'");
        // $data = Produk::get();
        return response()->json(['data' => $data]);
    }
    public function submit_jholbx(Request $request, $id)
    {
       $idx=$id;
        $validatedData = DB::update("update jual_hasil_olah_bbms set status='1' where id='$idx'");

        if ($validatedData) {
            //redirect dengan pesan sukses
            Alert::success('success', 'Data berhasil dikirim');
            return back();
        } else {
            //redirect dengan pesan error
            Alert::error('error', 'Data gagal dikirim');
            return back();
        }
    }
    
}
